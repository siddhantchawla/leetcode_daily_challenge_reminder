/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***************************!*\
  !*** ./src/background.js ***!
  \***************************/
chrome.alarms.create("Reminder-Alarm", {
  delayInMinutes: 2,
  periodInMinutes: 120
});
chrome.alarms.onAlarm.addListener(function (alarm) {
  var graphql = JSON.stringify({
    query: "query questionOfToday {  activeDailyCodingChallengeQuestion {  date   userStatus  link   question {     acRate      difficulty     freqBar      frontendQuestionId: questionFrontendId    isFavor     paidOnly: isPaidOnly      status    title    titleSlug     hasVideoSolution      hasSolution      topicTags {       name       id       slug}}}}"
  });
  var flag = true;
  var myHeaders = new Headers();
  myHeaders.append("Content-Type", "application/json");
  chrome.cookies.getAll({
    domain: "leetcode.com",
    name: "LEETCODE_SESSION"
  }, function (res) {
    if (res.length == 0) {
      flag = false;
    } else {
      myHeaders.append("LEETCODE_SESSION", res[0].value);
    }
  });
  var requestOptions = {
    method: 'POST',
    headers: myHeaders,
    body: graphql
  };

  if (flag) {
    fetch("https://leetcode.com/graphql", requestOptions).then(function (response) {
      return response.json();
    }).then(function (result) {
      if (result.data.activeDailyCodingChallengeQuestion.userStatus != "Finish") {
        chrome.notifications.clear('Leetcode Reminder', function () {
          chrome.notifications.create('Leetcode Reminder', {
            type: 'basic',
            iconUrl: '/logo5.png',
            title: 'Daily-Challenge Reminder!',
            message: 'You haven\'t completed today\'s Problem: ' + result.data.activeDailyCodingChallengeQuestion.question.title,
            priority: 2
          }, function () {
            chrome.notifications.onClicked.addListener(function () {
              chrome.tabs.create({
                url: "https://leetcode.com" + result.data.activeDailyCodingChallengeQuestion.link
              });
            });
          });
        });
      } else {
        chrome.notifications.clear('Leetcode Reminder');
      }
    })["catch"](function (error) {
      console.log(error);
    });
  }
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixLQUFaO0FBQ0gsS0F2QkQ7QUF3Qkg7QUFHSixDQW5ERCxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVldGNvZGVfZGFpbHlfY2hhbGxlbmdlX3JlbWluZGVyLy4vc3JjL2JhY2tncm91bmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNocm9tZS5hbGFybXMuY3JlYXRlKFwiUmVtaW5kZXItQWxhcm1cIiwge2RlbGF5SW5NaW51dGVzOiAyLCBwZXJpb2RJbk1pbnV0ZXM6IDEyMH0gKTtcclxuY2hyb21lLmFsYXJtcy5vbkFsYXJtLmFkZExpc3RlbmVyKGZ1bmN0aW9uKGFsYXJtKSB7XHJcblxyXG4gICAgY29uc3QgZ3JhcGhxbCA9IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBxdWVyeTogXCJxdWVyeSBxdWVzdGlvbk9mVG9kYXkgeyAgYWN0aXZlRGFpbHlDb2RpbmdDaGFsbGVuZ2VRdWVzdGlvbiB7ICBkYXRlICAgdXNlclN0YXR1cyAgbGluayAgIHF1ZXN0aW9uIHsgICAgIGFjUmF0ZSAgICAgIGRpZmZpY3VsdHkgICAgIGZyZXFCYXIgICAgICBmcm9udGVuZFF1ZXN0aW9uSWQ6IHF1ZXN0aW9uRnJvbnRlbmRJZCAgICBpc0Zhdm9yICAgICBwYWlkT25seTogaXNQYWlkT25seSAgICAgIHN0YXR1cyAgICB0aXRsZSAgICB0aXRsZVNsdWcgICAgIGhhc1ZpZGVvU29sdXRpb24gICAgICBoYXNTb2x1dGlvbiAgICAgIHRvcGljVGFncyB7ICAgICAgIG5hbWUgICAgICAgaWQgICAgICAgc2x1Z319fX1cIixcclxuICAgICAgfSlcclxuXHJcbiAgICB2YXIgZmxhZyA9IHRydWU7XHJcbiAgICB2YXIgbXlIZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuICAgIG15SGVhZGVycy5hcHBlbmQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xyXG4gICAgY2hyb21lLmNvb2tpZXMuZ2V0QWxsKHtkb21haW46IFwibGVldGNvZGUuY29tXCIsIG5hbWU6IFwiTEVFVENPREVfU0VTU0lPTlwifSwgKHJlcykgPT4geyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzLmxlbmd0aCA9PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15SGVhZGVycy5hcHBlbmQoXCJMRUVUQ09ERV9TRVNTSU9OXCIsIHJlc1swXS52YWx1ZSkgfX0pO1xyXG5cclxuICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiBteUhlYWRlcnMsXHJcbiAgICAgICAgYm9keTogZ3JhcGhxbFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgaWYgKGZsYWcpXHJcbiAgICB7XHJcbiAgICAgICAgZmV0Y2goXCJodHRwczovL2xlZXRjb2RlLmNvbS9ncmFwaHFsXCIsIHJlcXVlc3RPcHRpb25zKVxyXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAgICAgICAudGhlbihyZXN1bHQgPT4ge1xyXG4gICAgICAgICAgICBpZihyZXN1bHQuZGF0YS5hY3RpdmVEYWlseUNvZGluZ0NoYWxsZW5nZVF1ZXN0aW9uLnVzZXJTdGF0dXMgIT0gXCJGaW5pc2hcIilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY2hyb21lLm5vdGlmaWNhdGlvbnMuY2xlYXIoJ0xlZXRjb2RlIFJlbWluZGVyJywgKCkgPT4ge2Nocm9tZS5ub3RpZmljYXRpb25zLmNyZWF0ZSgnTGVldGNvZGUgUmVtaW5kZXInLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Jhc2ljJyxcclxuICAgICAgICAgICAgICAgICAgICBpY29uVXJsOiAnL2xvZ281LnBuZycsXHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdEYWlseS1DaGFsbGVuZ2UgUmVtaW5kZXIhJyxcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnWW91IGhhdmVuXFwndCBjb21wbGV0ZWQgdG9kYXlcXCdzIFByb2JsZW06ICcgKyByZXN1bHQuZGF0YS5hY3RpdmVEYWlseUNvZGluZ0NoYWxsZW5nZVF1ZXN0aW9uLnF1ZXN0aW9uLnRpdGxlLFxyXG4gICAgICAgICAgICAgICAgICAgIHByaW9yaXR5OiAyXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgKCkgPT4ge2Nocm9tZS5ub3RpZmljYXRpb25zLm9uQ2xpY2tlZC5hZGRMaXN0ZW5lcigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS50YWJzLmNyZWF0ZSh7dXJsOiBcImh0dHBzOi8vbGVldGNvZGUuY29tXCIrcmVzdWx0LmRhdGEuYWN0aXZlRGFpbHlDb2RpbmdDaGFsbGVuZ2VRdWVzdGlvbi5saW5rfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICB9KTsgIH0pXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNocm9tZS5ub3RpZmljYXRpb25zLmNsZWFyKCdMZWV0Y29kZSBSZW1pbmRlcicpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgICAgIFxyXG4gICAgXHJcbn0pOyJdLCJuYW1lcyI6WyJjaHJvbWUiLCJhbGFybXMiLCJjcmVhdGUiLCJkZWxheUluTWludXRlcyIsInBlcmlvZEluTWludXRlcyIsIm9uQWxhcm0iLCJhZGRMaXN0ZW5lciIsImFsYXJtIiwiZ3JhcGhxbCIsIkpTT04iLCJzdHJpbmdpZnkiLCJxdWVyeSIsImZsYWciLCJteUhlYWRlcnMiLCJIZWFkZXJzIiwiYXBwZW5kIiwiY29va2llcyIsImdldEFsbCIsImRvbWFpbiIsIm5hbWUiLCJyZXMiLCJsZW5ndGgiLCJ2YWx1ZSIsInJlcXVlc3RPcHRpb25zIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJyZXN1bHQiLCJkYXRhIiwiYWN0aXZlRGFpbHlDb2RpbmdDaGFsbGVuZ2VRdWVzdGlvbiIsInVzZXJTdGF0dXMiLCJub3RpZmljYXRpb25zIiwiY2xlYXIiLCJ0eXBlIiwiaWNvblVybCIsInRpdGxlIiwibWVzc2FnZSIsInF1ZXN0aW9uIiwicHJpb3JpdHkiLCJvbkNsaWNrZWQiLCJ0YWJzIiwidXJsIiwibGluayIsImVycm9yIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=